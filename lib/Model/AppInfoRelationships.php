<?php
/**
 * AppInfoRelationships
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * AppInfoRelationships Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AppInfoRelationships implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AppInfo_relationships';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'app' => '\OpenAPI\Client\Model\AppEncryptionDeclarationRelationshipsApp',
        'app_info_localizations' => '\OpenAPI\Client\Model\AppInfoRelationshipsAppInfoLocalizations',
        'primary_category' => '\OpenAPI\Client\Model\AppCategoryRelationshipsParent',
        'primary_subcategory_one' => '\OpenAPI\Client\Model\AppCategoryRelationshipsParent',
        'primary_subcategory_two' => '\OpenAPI\Client\Model\AppCategoryRelationshipsParent',
        'secondary_category' => '\OpenAPI\Client\Model\AppCategoryRelationshipsParent',
        'secondary_subcategory_one' => '\OpenAPI\Client\Model\AppCategoryRelationshipsParent',
        'secondary_subcategory_two' => '\OpenAPI\Client\Model\AppCategoryRelationshipsParent'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'app' => null,
        'app_info_localizations' => null,
        'primary_category' => null,
        'primary_subcategory_one' => null,
        'primary_subcategory_two' => null,
        'secondary_category' => null,
        'secondary_subcategory_one' => null,
        'secondary_subcategory_two' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'app' => 'app',
        'app_info_localizations' => 'appInfoLocalizations',
        'primary_category' => 'primaryCategory',
        'primary_subcategory_one' => 'primarySubcategoryOne',
        'primary_subcategory_two' => 'primarySubcategoryTwo',
        'secondary_category' => 'secondaryCategory',
        'secondary_subcategory_one' => 'secondarySubcategoryOne',
        'secondary_subcategory_two' => 'secondarySubcategoryTwo'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'app' => 'setApp',
        'app_info_localizations' => 'setAppInfoLocalizations',
        'primary_category' => 'setPrimaryCategory',
        'primary_subcategory_one' => 'setPrimarySubcategoryOne',
        'primary_subcategory_two' => 'setPrimarySubcategoryTwo',
        'secondary_category' => 'setSecondaryCategory',
        'secondary_subcategory_one' => 'setSecondarySubcategoryOne',
        'secondary_subcategory_two' => 'setSecondarySubcategoryTwo'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'app' => 'getApp',
        'app_info_localizations' => 'getAppInfoLocalizations',
        'primary_category' => 'getPrimaryCategory',
        'primary_subcategory_one' => 'getPrimarySubcategoryOne',
        'primary_subcategory_two' => 'getPrimarySubcategoryTwo',
        'secondary_category' => 'getSecondaryCategory',
        'secondary_subcategory_one' => 'getSecondarySubcategoryOne',
        'secondary_subcategory_two' => 'getSecondarySubcategoryTwo'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['app'] = isset($data['app']) ? $data['app'] : null;
        $this->container['app_info_localizations'] = isset($data['app_info_localizations']) ? $data['app_info_localizations'] : null;
        $this->container['primary_category'] = isset($data['primary_category']) ? $data['primary_category'] : null;
        $this->container['primary_subcategory_one'] = isset($data['primary_subcategory_one']) ? $data['primary_subcategory_one'] : null;
        $this->container['primary_subcategory_two'] = isset($data['primary_subcategory_two']) ? $data['primary_subcategory_two'] : null;
        $this->container['secondary_category'] = isset($data['secondary_category']) ? $data['secondary_category'] : null;
        $this->container['secondary_subcategory_one'] = isset($data['secondary_subcategory_one']) ? $data['secondary_subcategory_one'] : null;
        $this->container['secondary_subcategory_two'] = isset($data['secondary_subcategory_two']) ? $data['secondary_subcategory_two'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets app
     *
     * @return \OpenAPI\Client\Model\AppEncryptionDeclarationRelationshipsApp|null
     */
    public function getApp()
    {
        return $this->container['app'];
    }

    /**
     * Sets app
     *
     * @param \OpenAPI\Client\Model\AppEncryptionDeclarationRelationshipsApp|null $app app
     *
     * @return $this
     */
    public function setApp($app)
    {
        $this->container['app'] = $app;

        return $this;
    }

    /**
     * Gets app_info_localizations
     *
     * @return \OpenAPI\Client\Model\AppInfoRelationshipsAppInfoLocalizations|null
     */
    public function getAppInfoLocalizations()
    {
        return $this->container['app_info_localizations'];
    }

    /**
     * Sets app_info_localizations
     *
     * @param \OpenAPI\Client\Model\AppInfoRelationshipsAppInfoLocalizations|null $app_info_localizations app_info_localizations
     *
     * @return $this
     */
    public function setAppInfoLocalizations($app_info_localizations)
    {
        $this->container['app_info_localizations'] = $app_info_localizations;

        return $this;
    }

    /**
     * Gets primary_category
     *
     * @return \OpenAPI\Client\Model\AppCategoryRelationshipsParent|null
     */
    public function getPrimaryCategory()
    {
        return $this->container['primary_category'];
    }

    /**
     * Sets primary_category
     *
     * @param \OpenAPI\Client\Model\AppCategoryRelationshipsParent|null $primary_category primary_category
     *
     * @return $this
     */
    public function setPrimaryCategory($primary_category)
    {
        $this->container['primary_category'] = $primary_category;

        return $this;
    }

    /**
     * Gets primary_subcategory_one
     *
     * @return \OpenAPI\Client\Model\AppCategoryRelationshipsParent|null
     */
    public function getPrimarySubcategoryOne()
    {
        return $this->container['primary_subcategory_one'];
    }

    /**
     * Sets primary_subcategory_one
     *
     * @param \OpenAPI\Client\Model\AppCategoryRelationshipsParent|null $primary_subcategory_one primary_subcategory_one
     *
     * @return $this
     */
    public function setPrimarySubcategoryOne($primary_subcategory_one)
    {
        $this->container['primary_subcategory_one'] = $primary_subcategory_one;

        return $this;
    }

    /**
     * Gets primary_subcategory_two
     *
     * @return \OpenAPI\Client\Model\AppCategoryRelationshipsParent|null
     */
    public function getPrimarySubcategoryTwo()
    {
        return $this->container['primary_subcategory_two'];
    }

    /**
     * Sets primary_subcategory_two
     *
     * @param \OpenAPI\Client\Model\AppCategoryRelationshipsParent|null $primary_subcategory_two primary_subcategory_two
     *
     * @return $this
     */
    public function setPrimarySubcategoryTwo($primary_subcategory_two)
    {
        $this->container['primary_subcategory_two'] = $primary_subcategory_two;

        return $this;
    }

    /**
     * Gets secondary_category
     *
     * @return \OpenAPI\Client\Model\AppCategoryRelationshipsParent|null
     */
    public function getSecondaryCategory()
    {
        return $this->container['secondary_category'];
    }

    /**
     * Sets secondary_category
     *
     * @param \OpenAPI\Client\Model\AppCategoryRelationshipsParent|null $secondary_category secondary_category
     *
     * @return $this
     */
    public function setSecondaryCategory($secondary_category)
    {
        $this->container['secondary_category'] = $secondary_category;

        return $this;
    }

    /**
     * Gets secondary_subcategory_one
     *
     * @return \OpenAPI\Client\Model\AppCategoryRelationshipsParent|null
     */
    public function getSecondarySubcategoryOne()
    {
        return $this->container['secondary_subcategory_one'];
    }

    /**
     * Sets secondary_subcategory_one
     *
     * @param \OpenAPI\Client\Model\AppCategoryRelationshipsParent|null $secondary_subcategory_one secondary_subcategory_one
     *
     * @return $this
     */
    public function setSecondarySubcategoryOne($secondary_subcategory_one)
    {
        $this->container['secondary_subcategory_one'] = $secondary_subcategory_one;

        return $this;
    }

    /**
     * Gets secondary_subcategory_two
     *
     * @return \OpenAPI\Client\Model\AppCategoryRelationshipsParent|null
     */
    public function getSecondarySubcategoryTwo()
    {
        return $this->container['secondary_subcategory_two'];
    }

    /**
     * Sets secondary_subcategory_two
     *
     * @param \OpenAPI\Client\Model\AppCategoryRelationshipsParent|null $secondary_subcategory_two secondary_subcategory_two
     *
     * @return $this
     */
    public function setSecondarySubcategoryTwo($secondary_subcategory_two)
    {
        $this->container['secondary_subcategory_two'] = $secondary_subcategory_two;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


