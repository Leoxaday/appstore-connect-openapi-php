<?php
/**
 * IdfaDeclarationCreateRequestDataAttributes
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * IdfaDeclarationCreateRequestDataAttributes Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class IdfaDeclarationCreateRequestDataAttributes implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'IdfaDeclarationCreateRequest_data_attributes';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'serves_ads' => 'bool',
        'attributes_app_installation_to_previous_ad' => 'bool',
        'attributes_action_with_previous_ad' => 'bool',
        'honors_limited_ad_tracking' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'serves_ads' => null,
        'attributes_app_installation_to_previous_ad' => null,
        'attributes_action_with_previous_ad' => null,
        'honors_limited_ad_tracking' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'serves_ads' => 'servesAds',
        'attributes_app_installation_to_previous_ad' => 'attributesAppInstallationToPreviousAd',
        'attributes_action_with_previous_ad' => 'attributesActionWithPreviousAd',
        'honors_limited_ad_tracking' => 'honorsLimitedAdTracking'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'serves_ads' => 'setServesAds',
        'attributes_app_installation_to_previous_ad' => 'setAttributesAppInstallationToPreviousAd',
        'attributes_action_with_previous_ad' => 'setAttributesActionWithPreviousAd',
        'honors_limited_ad_tracking' => 'setHonorsLimitedAdTracking'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'serves_ads' => 'getServesAds',
        'attributes_app_installation_to_previous_ad' => 'getAttributesAppInstallationToPreviousAd',
        'attributes_action_with_previous_ad' => 'getAttributesActionWithPreviousAd',
        'honors_limited_ad_tracking' => 'getHonorsLimitedAdTracking'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['serves_ads'] = isset($data['serves_ads']) ? $data['serves_ads'] : null;
        $this->container['attributes_app_installation_to_previous_ad'] = isset($data['attributes_app_installation_to_previous_ad']) ? $data['attributes_app_installation_to_previous_ad'] : null;
        $this->container['attributes_action_with_previous_ad'] = isset($data['attributes_action_with_previous_ad']) ? $data['attributes_action_with_previous_ad'] : null;
        $this->container['honors_limited_ad_tracking'] = isset($data['honors_limited_ad_tracking']) ? $data['honors_limited_ad_tracking'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['serves_ads'] === null) {
            $invalidProperties[] = "'serves_ads' can't be null";
        }
        if ($this->container['attributes_app_installation_to_previous_ad'] === null) {
            $invalidProperties[] = "'attributes_app_installation_to_previous_ad' can't be null";
        }
        if ($this->container['attributes_action_with_previous_ad'] === null) {
            $invalidProperties[] = "'attributes_action_with_previous_ad' can't be null";
        }
        if ($this->container['honors_limited_ad_tracking'] === null) {
            $invalidProperties[] = "'honors_limited_ad_tracking' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets serves_ads
     *
     * @return bool
     */
    public function getServesAds()
    {
        return $this->container['serves_ads'];
    }

    /**
     * Sets serves_ads
     *
     * @param bool $serves_ads serves_ads
     *
     * @return $this
     */
    public function setServesAds($serves_ads)
    {
        $this->container['serves_ads'] = $serves_ads;

        return $this;
    }

    /**
     * Gets attributes_app_installation_to_previous_ad
     *
     * @return bool
     */
    public function getAttributesAppInstallationToPreviousAd()
    {
        return $this->container['attributes_app_installation_to_previous_ad'];
    }

    /**
     * Sets attributes_app_installation_to_previous_ad
     *
     * @param bool $attributes_app_installation_to_previous_ad attributes_app_installation_to_previous_ad
     *
     * @return $this
     */
    public function setAttributesAppInstallationToPreviousAd($attributes_app_installation_to_previous_ad)
    {
        $this->container['attributes_app_installation_to_previous_ad'] = $attributes_app_installation_to_previous_ad;

        return $this;
    }

    /**
     * Gets attributes_action_with_previous_ad
     *
     * @return bool
     */
    public function getAttributesActionWithPreviousAd()
    {
        return $this->container['attributes_action_with_previous_ad'];
    }

    /**
     * Sets attributes_action_with_previous_ad
     *
     * @param bool $attributes_action_with_previous_ad attributes_action_with_previous_ad
     *
     * @return $this
     */
    public function setAttributesActionWithPreviousAd($attributes_action_with_previous_ad)
    {
        $this->container['attributes_action_with_previous_ad'] = $attributes_action_with_previous_ad;

        return $this;
    }

    /**
     * Gets honors_limited_ad_tracking
     *
     * @return bool
     */
    public function getHonorsLimitedAdTracking()
    {
        return $this->container['honors_limited_ad_tracking'];
    }

    /**
     * Sets honors_limited_ad_tracking
     *
     * @param bool $honors_limited_ad_tracking honors_limited_ad_tracking
     *
     * @return $this
     */
    public function setHonorsLimitedAdTracking($honors_limited_ad_tracking)
    {
        $this->container['honors_limited_ad_tracking'] = $honors_limited_ad_tracking;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


